# Generated by Django 3.1.2 on 2020-10-17 01:08

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_word', models.CharField(max_length=64, verbose_name='Ключевое слово')),
                ('owner', models.CharField(choices=[('module', 'Модуль'), ('task', 'Задание')], max_length=16, verbose_name='Владелец тэга')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, verbose_name='Наименование задания')),
                ('visibility_level', models.CharField(choices=[('personal', 'Персональный'), ('school', 'Школьный'), ('global', 'Глобальный')], default='personal', max_length=16, verbose_name='Уровень видимости')),
                ('task_type', models.CharField(choices=[('motivating', 'Мотивирующее'), ('educational', 'Учебное'), ('verification', 'Проверочное')], default='educational', max_length=32, verbose_name='Тип задания')),
                ('check_type', models.CharField(blank=True, choices=[('teacher', 'Проверка учителем'), ('auto', 'Автоматическая'), ('self', 'Самопроверка'), ('mutually', 'Взаимопроверка')], max_length=32, verbose_name='Тип проверки')),
                ('attempts_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Количество попыток')),
                ('work_form', models.CharField(choices=[('individual', 'Индивидуально'), ('group', 'В малых группах'), ('pair', 'В парах'), ('class', 'В классе')], max_length=32, verbose_name='Форма работы')),
                ('way', models.CharField(blank=True, choices=[('nothing', 'Не указано'), ('offline', 'Офлайн'), ('online', 'Онлайн')], max_length=32, verbose_name='Способ выполнения')),
                ('work_minute', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Трудоемкость')),
                ('soft_skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('make_decisions', 'Принятие решений'), ('team_work', 'Работа в команде'), ('self_management', 'Управление собой'), ('creative', 'Креативное мышление'), ('critical', 'Критическое мышление'), ('emotion', 'Эмоциональный интеллект'), ('system', 'Системное мышление')], max_length=64, verbose_name='Развиваемые мягкие навыки'), blank=True, size=7)),
                ('owner', models.TextField(blank=True, max_length=512, verbose_name='ФИО автора')),
                ('license', models.CharField(blank=True, choices=[('CC0', 'CC0'), ('BY', 'BY'), ('BY-SA', 'BY-SA'), ('BY-NC', 'BY-NC'), ('BY-NC-SA', 'BY-NC-SA'), ('BY-ND', 'BY-ND'), ('BY-NC-ND', 'BY-NC-ND')], max_length=64, verbose_name='Лицензия')),
                ('resources', models.TextField(blank=True, verbose_name='Внешние источники информации')),
                ('info_for_expert', models.TextField(blank=True, verbose_name='Информация для проверяющего')),
                ('info_for_student', models.TextField(blank=True, verbose_name='Заметка для ученика')),
                ('info_for_teacher', models.TextField(blank=True, verbose_name='Информация для учителя')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('version', models.IntegerField(verbose_name='Версия задания')),
                ('is_active_version', models.BooleanField(default=True, verbose_name='Текушая версия активна')),
                ('tags', models.ManyToManyField(blank=True, related_name='tasks', to='education.Tag', verbose_name='Тэги')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility_level', models.CharField(choices=[('personal', 'Персональный'), ('school', 'Школьный'), ('global', 'Глобальный')], default='personal', max_length=16, verbose_name='Уровень видимости')),
                ('name', models.CharField(max_length=254, verbose_name='Наименование модуля')),
                ('version', models.IntegerField(verbose_name='Версия модуля')),
                ('subject', models.CharField(choices=[('maths', 'Математика'), ('literature', 'Литература'), ('physics', 'Физика'), ('biology', 'Биология'), ('russian', 'Русский язык')], max_length=128, verbose_name='Предмет')),
                ('step', models.CharField(choices=[('1', '1-я параллель'), ('2', '2-я параллель'), ('3', '3-я параллель'), ('4', '4-я параллель'), ('5', '5-я параллель'), ('6', '6-я параллель'), ('7', '7-я параллель'), ('8', '8-я параллель'), ('9', '9-я параллель'), ('10', '10-я параллель'), ('11', '11-я параллель'), ('12', '12-я параллель')], max_length=128, verbose_name='Класс')),
                ('add_module', models.BooleanField(blank=True, default=False, verbose_name='Дополнительный модуль')),
                ('work_hours', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Трудоемкость')),
                ('base_idea', models.TextField(verbose_name='Базовая идея')),
                ('problematic_question', models.TextField(verbose_name='Проблемный вопрос')),
                ('general_concept', models.TextField(blank=True, verbose_name='Общий замысел модуля')),
                ('typical_distribution', models.TextField(blank=True, verbose_name='Типовое распределение заданий по\xa0урокам')),
                ('possible_difficulties', models.TextField(blank=True, verbose_name='Возможные трудности, ложные представления и способы их преодоления')),
                ('cover_picture', models.FileField(blank=True, upload_to='', verbose_name='Обложка модуля')),
                ('small_picture', models.FileField(blank=True, upload_to='', verbose_name='Картинка для списка')),
                ('is_active_version', models.BooleanField(default=True, verbose_name='Текушая версия активна')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('check', 'Проверка'), ('add_work', 'Доработка'), ('ready', 'Целевая группа'), ('public', 'Публичный'), ('archive', 'Архив')], default='draft', max_length=32, verbose_name='Статус модуля')),
                ('tags', models.ManyToManyField(blank=True, related_name='modules', to='education.Tag', verbose_name='Тэги')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_step', models.CharField(choices=[('2', '2.0'), ('3', '3.0'), ('4', '4.0')], default='2', max_length=2, verbose_name='Уровень')),
                ('target', models.TextField(verbose_name='Описание элемента цели')),
                ('example', models.TextField(verbose_name='Пример достижения цели (Я\xa0могу…)')),
                ('module', models.ManyToManyField(related_name='levels', to='education.Module', verbose_name='Модули')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(verbose_name='Тема урока')),
                ('content', models.TextField(verbose_name='Содержание урока')),
                ('tasks', models.ManyToManyField(blank=True, related_name='lessons', to='education.Task', verbose_name='Задания')),
            ],
        ),
    ]
